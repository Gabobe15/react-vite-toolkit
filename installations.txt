install template 
```sh 
npx create-react-app my-app --template redux
```

- @latest 

``` sh
npx create-react-app@latest my-app --template redux

Existing app
npm install @reduxjs/toolkit react-redux

reduxjs/toolkit 
consists of few libraries 

- redux (core library, state management)
- immer (allows to mutate state)
- redux-thunk (handles async actions)
- reselect (simplifies reducer functions)

Extras 

- redux devtools
- combine reducers 

react-redux 
connects our app to redux 

### Setup Store 

- create store.jsx 

import { configureStore } from '@reduxjs/toolkit';

export const store = configureStore({reducer: {}});

Setup provider 

main.jsx

import React from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
// redux imports 
import { store } from "./store";
import {Provider} from 'react-redux'

const container = document.getElementById('root')
const root = createRoot(container);
root.render(
  <React.StrictMode>
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>
);

### Setup Cart Slice 

- application features 
- create features folder/Cart
- create cartSlice.jsx

import { createSlice, createAsyncThunk} from '@reduxjs/toolkit'

const initialState = {
  cartItem = [],
  amount: 0,
  total: 0,
  isLoading: true;
};

const cartSlice = createSlice({name: 'cart', initialState})

console.log(cartSlice)

export default cartSlice.reducer;


### Access store value 
- create components/Navbar.jsx

  const { amount } = useSelector(state => state.cart); // we are desturcturing values from the cart 
  we can set it up differently 
  const item = useSelector(state => state.cart.amount) // return the amount value seperately

// import {CartIcon} from '../icons'
import {useSelector} from 'react-redux'

const Navbar = () => {
    const amount  = useSelector( state => state.cart.amount)
    // const { amount } = useSelector( state => state.cart)
  return(
    <nav>
        <div className="nav-center">
            <h3>redux toolkit</h3>
            <div className="nav-container">
                {/* <CartIcon/> */}
                <div className="amount-container">
                    <p className="total-amount">{amount}</p>
                </div>
            </div>
        </div>
    </nav>
  )
}

export default Navbar;


### Hero Icons 

- [Hero Icons](https://heroicons.com/)

css 
nav svg {
  width: 40px;
  color: var(--clr-white);
}


### Setup Cart 

- cartSlice.jsx

import cartItem 

### First Reducer 

- cartSlice.jsx
- Immer library
const cartSlice = createSlice({
  name: 'cart';
  initialState,
  reducers : {
    clearCart: state => state.cartItems = []
  }
})

export const { clearCart } = cartSlice.actions;

{- create action

const ACTION_TYPE = 'ACTION_TYPE';

const actionCreator = (payload) => {
  return {type: ACTION_TYPE, payload: payload}
}} is not required 

cartContainer.jsx 
import {useDispatch} from 'react-redux'

const dispatch = useDispatch()

onClick(dispatch(clearCart()))

we setup calculateTotal in the App file.
